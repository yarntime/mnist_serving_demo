// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker.proto

package org.tensorflow.distruntime;

public interface RecvTensorRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.RecvTensorRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The step in which the tensor will be produced.
   * REQUIRED: This must eventually correspond to the `step_id` passed
   * into a RunGraph call on the same WorkerService.
   * </pre>
   *
   * <code>optional int64 step_id = 1;</code>
   */
  long getStepId();

  /**
   * <pre>
   * A key that identifies the tensor to be received.
   * </pre>
   *
   * <code>optional string rendezvous_key = 2;</code>
   */
  java.lang.String getRendezvousKey();
  /**
   * <pre>
   * A key that identifies the tensor to be received.
   * </pre>
   *
   * <code>optional string rendezvous_key = 2;</code>
   */
  com.google.protobuf.ByteString
      getRendezvousKeyBytes();

  /**
   * <pre>
   * If true, use an out-of-band DMA mechanism to transfer the
   * received tensor.
   * </pre>
   *
   * <code>optional bool dma_ok = 3;</code>
   */
  boolean getDmaOk();

  /**
   * <pre>
   * Optional information on client-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality client_locality = 4;</code>
   */
  boolean hasClientLocality();
  /**
   * <pre>
   * Optional information on client-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality client_locality = 4;</code>
   */
  org.tensorflow.framework.DeviceLocality getClientLocality();
  /**
   * <pre>
   * Optional information on client-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality client_locality = 4;</code>
   */
  org.tensorflow.framework.DeviceLocalityOrBuilder getClientLocalityOrBuilder();

  /**
   * <pre>
   * Optional information on server-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality server_locality = 5;</code>
   */
  boolean hasServerLocality();
  /**
   * <pre>
   * Optional information on server-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality server_locality = 5;</code>
   */
  org.tensorflow.framework.DeviceLocality getServerLocality();
  /**
   * <pre>
   * Optional information on server-side device locality.
   * </pre>
   *
   * <code>optional .tensorflow.DeviceLocality server_locality = 5;</code>
   */
  org.tensorflow.framework.DeviceLocalityOrBuilder getServerLocalityOrBuilder();
}
